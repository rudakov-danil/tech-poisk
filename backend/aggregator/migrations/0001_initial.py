# Generated by Django 4.2.7 on 2023-11-19 12:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('case_type', models.CharField(max_length=255)),
                ('compatible_motherboard_form_factor', models.CharField(max_length=255)),
                ('compatible_power_supply_form_factor', models.CharField(max_length=255)),
                ('motherboard_orientation', models.CharField(max_length=255)),
                ('built_in_power_supply', models.BooleanField(default=False)),
                ('main_color', models.CharField(max_length=255)),
                ('case_material', models.CharField(max_length=255)),
                ('side_panel_window', models.BooleanField(default=False)),
                ('window_material', models.CharField(max_length=255)),
                ('front_panel_material', models.CharField(max_length=255)),
                ('max_power_supply_length', models.FloatField()),
                ('horizontal_expansion_slots', models.IntegerField()),
                ('vertical_expansion_slots', models.IntegerField()),
                ('max_gpu_length', models.FloatField()),
                ('max_cooler_height', models.FloatField()),
                ('num_25_inch_bays', models.IntegerField()),
                ('num_35_inch_bays', models.IntegerField()),
                ('illumination_type', models.CharField(max_length=255)),
                ('illumination_color', models.CharField(max_length=255)),
                ('illumination_source', models.CharField(max_length=255)),
                ('illumination_connector_type', models.CharField(max_length=255)),
                ('illumination_control_method', models.CharField(max_length=255)),
                ('fans_included', models.BooleanField(default=False)),
                ('front_fans_support', models.BooleanField(default=False)),
                ('rear_fans_support', models.BooleanField(default=False)),
                ('top_fans_support', models.BooleanField(default=False)),
                ('bottom_fans_support', models.BooleanField(default=False)),
                ('side_fans_support', models.BooleanField(default=False)),
                ('liquid_cooler_support', models.BooleanField(default=False)),
                ('front_radiator_size', models.CharField(max_length=255)),
                ('top_radiator_size', models.CharField(max_length=255)),
                ('rear_radiator_size', models.CharField(max_length=255)),
                ('length', models.FloatField()),
                ('width', models.FloatField()),
                ('height', models.FloatField()),
                ('weight', models.FloatField()),
                ('front_panel_location', models.CharField(max_length=255)),
                ('connectors', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CaseFan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('manufacturer_code', models.CharField(max_length=50)),
                ('number_of_fans_in_bundle', models.PositiveIntegerField()),
                ('fan_size', models.PositiveIntegerField()),
                ('fan_thickness', models.PositiveIntegerField()),
                ('bearing_type', models.CharField(max_length=50)),
                ('frame_color', models.CharField(max_length=50)),
                ('blade_color', models.CharField(max_length=50)),
                ('illumination_type', models.CharField(max_length=50)),
                ('illumination_source', models.CharField(max_length=50)),
                ('max_rotation_speed', models.PositiveIntegerField()),
                ('min_rotation_speed', models.PositiveIntegerField()),
                ('max_airflow_at_max_speed', models.PositiveIntegerField()),
                ('max_static_pressure', models.PositiveIntegerField()),
                ('max_noise_level', models.PositiveIntegerField()),
                ('min_noise_level', models.PositiveIntegerField()),
                ('fan_power_connector_type', models.CharField(max_length=50)),
                ('speed_control', models.BooleanField()),
                ('nominal_voltage', models.PositiveIntegerField()),
                ('max_current', models.PositiveIntegerField()),
                ('illumination_power_connector_type', models.CharField(max_length=50)),
                ('included_hub_controller', models.BooleanField()),
                ('remote_control_included', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Cooler',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('model', models.CharField(max_length=100)),
                ('socket', models.CharField(max_length=50)),
                ('thermal_power_dissipation', models.PositiveIntegerField()),
                ('construction_type', models.CharField(max_length=50)),
                ('number_of_fans', models.PositiveIntegerField()),
                ('fan_dimensions', models.CharField(max_length=50)),
                ('fan_connector_type', models.CharField(max_length=50)),
                ('max_rotation_speed', models.PositiveIntegerField()),
                ('min_rotation_speed', models.PositiveIntegerField()),
                ('rotation_speed_control', models.BooleanField()),
                ('max_airflow', models.PositiveIntegerField()),
                ('max_noise_level', models.PositiveIntegerField()),
                ('max_static_pressure', models.PositiveIntegerField()),
                ('nominal_current', models.PositiveIntegerField()),
                ('nominal_voltage', models.PositiveIntegerField()),
                ('bearing_type', models.CharField(max_length=50)),
                ('base_material', models.CharField(max_length=50)),
                ('radiator_material', models.CharField(max_length=50)),
                ('number_of_heat_pipes', models.PositiveIntegerField()),
                ('illumination_type', models.CharField(max_length=50)),
                ('illumination_power_connector_type', models.CharField(max_length=50)),
                ('illumination_source', models.CharField(max_length=50)),
                ('lcd_display', models.BooleanField()),
                ('height', models.PositiveIntegerField()),
                ('width', models.PositiveIntegerField()),
                ('length', models.PositiveIntegerField()),
                ('weigh', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='GraphicsCard',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('manufacturer_code', models.CharField(max_length=50)),
                ('microarchitecture', models.CharField(max_length=50)),
                ('lhr', models.BooleanField()),
                ('technology_process', models.PositiveIntegerField()),
                ('video_connector_type_and_quantity', models.CharField(max_length=100)),
                ('hdmi_version', models.CharField(max_length=50)),
                ('displayport_version', models.CharField(max_length=50)),
                ('number_of_simultaneously_connected_monitors', models.PositiveIntegerField()),
                ('max_resolution', models.CharField(max_length=50)),
                ('connection_interface', models.CharField(max_length=50)),
                ('connection_connector_form_factor', models.CharField(max_length=50)),
                ('number_of_pci_e_lines', models.PositiveIntegerField()),
                ('additional_power_connectors', models.CharField(max_length=50)),
                ('power_consumption', models.PositiveIntegerField()),
                ('base_chip_frequency', models.DecimalField(decimal_places=2, max_digits=5)),
                ('turbo_frequency', models.DecimalField(decimal_places=2, max_digits=5)),
                ('number_of_alus', models.PositiveIntegerField()),
                ('number_of_texture_blocks', models.PositiveIntegerField()),
                ('number_of_rasterization_blocks', models.PositiveIntegerField()),
                ('ray_tracing_support', models.BooleanField()),
                ('rt_cores', models.PositiveIntegerField()),
                ('tensor_cores', models.PositiveIntegerField()),
                ('video_memory_size', models.PositiveIntegerField()),
                ('memory_type', models.CharField(max_length=50)),
                ('memory_bus_width', models.PositiveIntegerField()),
                ('max_memory_bandwidth', models.PositiveIntegerField()),
                ('effective_memory_frequency', models.PositiveIntegerField()),
                ('low_profile_card', models.BooleanField()),
                ('number_of_expansion_slots_occupied', models.PositiveIntegerField()),
                ('card_length', models.PositiveIntegerField()),
                ('card_width', models.PositiveIntegerField()),
                ('card_thickness', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='HDD',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('manufacturer_code', models.CharField(max_length=255)),
                ('purpose', models.CharField(max_length=255)),
                ('hdd_capacity', models.FloatField()),
                ('cache_capacity', models.FloatField()),
                ('spindle_speed', models.IntegerField()),
                ('max_data_transfer_speed', models.FloatField()),
                ('average_seek_time', models.FloatField()),
                ('interface', models.CharField(max_length=255)),
                ('raid_optimization', models.BooleanField(default=False)),
                ('width', models.FloatField()),
                ('length', models.FloatField()),
                ('thickness', models.FloatField()),
                ('weight', models.FloatField()),
                ('max_power_consumption', models.FloatField()),
                ('idle_power_consumption', models.FloatField()),
                ('max_operating_temperature', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='LiquidCooling',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('manufacturer_code', models.CharField(max_length=50)),
                ('socket', models.CharField(max_length=50)),
                ('thermal_power_dissipation', models.PositiveIntegerField()),
                ('coolant_block_material', models.CharField(max_length=50)),
                ('compatible_liquid_cooling_solution', models.BooleanField()),
                ('coolant_block_dimensions', models.CharField(max_length=50)),
                ('number_of_fans', models.PositiveIntegerField()),
                ('fan_dimensions', models.CharField(max_length=50)),
                ('fan_connector_type', models.CharField(max_length=50)),
                ('max_rotation_speed', models.PositiveIntegerField()),
                ('min_rotation_speed', models.PositiveIntegerField()),
                ('rotation_speed_control', models.BooleanField()),
                ('max_airflow', models.PositiveIntegerField()),
                ('max_noise_level', models.PositiveIntegerField()),
                ('max_static_pressure', models.PositiveIntegerField()),
                ('nominal_current', models.PositiveIntegerField()),
                ('nominal_voltage', models.PositiveIntegerField()),
                ('bearing_type', models.CharField(max_length=50)),
                ('radiator_mount_size', models.CharField(max_length=50)),
                ('radiator_length', models.PositiveIntegerField()),
                ('radiator_width', models.PositiveIntegerField()),
                ('radiator_thickness', models.PositiveIntegerField()),
                ('radiator_material', models.CharField(max_length=50)),
                ('illumination_type', models.CharField(max_length=50)),
                ('illumination_power_connector_type', models.CharField(max_length=50)),
                ('illumination_source', models.CharField(max_length=50)),
                ('lcd_display', models.BooleanField()),
                ('pump_noise_level', models.PositiveIntegerField()),
                ('pump_rotation_speed', models.PositiveIntegerField()),
                ('pump_connector_type', models.CharField(max_length=50)),
                ('tube_length', models.PositiveIntegerField()),
                ('transparent_tubes', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('socket_type', models.CharField(max_length=50)),
                ('chipset_type', models.CharField(max_length=50)),
                ('form_factor', models.CharField(max_length=50)),
                ('compatible_processor_cores', models.CharField(max_length=100)),
                ('usb_ports_on_rear_panel', models.PositiveIntegerField()),
                ('video_outputs', models.PositiveIntegerField()),
                ('network_ports_rj45', models.PositiveIntegerField()),
                ('sma_connectors_for_wifi_antenna', models.PositiveIntegerField()),
                ('memory_type', models.CharField(max_length=50)),
                ('memory_form_factor', models.CharField(max_length=50)),
                ('number_of_memory_slots', models.PositiveIntegerField()),
                ('number_of_memory_channels', models.PositiveIntegerField()),
                ('max_memory_size', models.PositiveIntegerField()),
                ('memory_frequency_without_overclocking', models.PositiveIntegerField()),
                ('max_memory_frequency_with_overclocking', models.PositiveIntegerField()),
                ('main_power_connector', models.CharField(max_length=50)),
                ('cpu_power_connector', models.CharField(max_length=50)),
                ('number_of_power_phases', models.PositiveIntegerField()),
                ('passive_cooling_support', models.BooleanField()),
                ('active_cooling_support', models.BooleanField()),
                ('expansion_slots', models.CharField(max_length=100)),
                ('number_of_sata_ports', models.PositiveIntegerField()),
                ('audio_scheme', models.CharField(max_length=50)),
                ('audio_chipset', models.CharField(max_length=50)),
                ('network_adapter_speed', models.CharField(max_length=50)),
                ('network_adapter', models.CharField(max_length=50)),
                ('wifi_standard', models.CharField(max_length=50)),
                ('bluetooth_version', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PowerSupply',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nominal_power', models.FloatField()),
                ('power_on_12v_line', models.FloatField()),
                ('manufacturer_code', models.CharField(max_length=255)),
                ('detachable_cables', models.BooleanField(default=False)),
                ('wire_colors', models.CharField(max_length=255)),
                ('illumination_type', models.CharField(max_length=255)),
                ('illumination_color', models.CharField(max_length=255)),
                ('motherboard_power', models.CharField(max_length=255)),
                ('cpu_power', models.CharField(max_length=255)),
                ('gpu_power', models.CharField(max_length=255)),
                ('num_sata_connectors', models.IntegerField()),
                ('num_molex_connectors', models.IntegerField()),
                ('floppy_connector', models.BooleanField(default=False)),
                ('motherboard_power_cable_length', models.FloatField()),
                ('cpu_power_cable_length', models.FloatField()),
                ('gpu_power_cable_length', models.FloatField()),
                ('sata_power_cable_length', models.FloatField()),
                ('molex_power_cable_length', models.FloatField()),
                ('eighty_plus_certification', models.CharField(max_length=255)),
                ('power_factor_correction', models.BooleanField(default=False)),
                ('compliance_standards', models.CharField(max_length=255)),
                ('protection_technologies', models.CharField(max_length=255)),
                ('cooling_system', models.BooleanField(default=False)),
                ('fan_dimensions', models.CharField(max_length=255)),
                ('fan_speed_control', models.BooleanField(default=False)),
                ('hybrid_mode_switch', models.BooleanField(default=False)),
                ('length', models.FloatField()),
                ('width', models.FloatField()),
                ('height', models.FloatField()),
                ('weight', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('manufacturer_name', models.CharField(max_length=100)),
                ('series_name', models.CharField(max_length=100)),
                ('release_year', models.PositiveIntegerField()),
                ('manufacturer_code', models.CharField(max_length=50)),
                ('supply_type', models.CharField(max_length=50)),
                ('architecture_name', models.CharField(max_length=100)),
                ('number_of_cores', models.PositiveIntegerField()),
                ('energy_efficient_cores', models.PositiveIntegerField()),
                ('number_of_threads', models.PositiveIntegerField()),
                ('l2_cache_size', models.PositiveIntegerField()),
                ('l3_cache_size', models.PositiveIntegerField()),
                ('technology_process_in_nanometers', models.PositiveIntegerField()),
                ('memory_type', models.CharField(max_length=50)),
                ('max_memory_size', models.PositiveIntegerField()),
                ('max_memory_speed', models.PositiveIntegerField()),
                ('memory_channels', models.PositiveIntegerField()),
                ('ecc_support', models.BooleanField()),
                ('base_frequency', models.DecimalField(decimal_places=2, max_digits=5)),
                ('turbo_frequency', models.DecimalField(decimal_places=2, max_digits=5)),
                ('unlocked_multiplier', models.BooleanField()),
                ('tdp_in_watts', models.PositiveIntegerField()),
                ('max_operating_temperature', models.PositiveIntegerField()),
                ('integrated_graphics_core', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('memory_type', models.CharField(max_length=50)),
                ('memory_form_factor', models.CharField(max_length=50)),
                ('manufacturer_code', models.CharField(max_length=50)),
                ('total_memory_capacity', models.PositiveIntegerField()),
                ('memory_module_capacity', models.PositiveIntegerField()),
                ('number_of_modules_in_set', models.PositiveIntegerField()),
                ('registered_memory', models.BooleanField()),
                ('ecc_memory', models.BooleanField()),
                ('clock_speed', models.PositiveIntegerField()),
                ('cas_latency', models.PositiveIntegerField()),
                ('ras_to_cas_delay', models.PositiveIntegerField()),
                ('row_precharge_delay', models.PositiveIntegerField()),
                ('activate_to_precharge_delay', models.PositiveIntegerField()),
                ('voltage', models.PositiveIntegerField()),
                ('heatsink_present', models.BooleanField()),
                ('led_illumination', models.BooleanField()),
                ('height', models.PositiveIntegerField()),
                ('low_profile', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='SSD',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=255)),
                ('manufacturer_code', models.CharField(max_length=255)),
                ('storage_capacity', models.FloatField()),
                ('connection_interface', models.CharField(max_length=255)),
                ('bits_per_cell', models.IntegerField()),
                ('memory_structure', models.CharField(max_length=255)),
                ('dram_buffer', models.BooleanField(default=False)),
                ('dram_buffer_capacity', models.FloatField()),
                ('width', models.FloatField()),
                ('length', models.FloatField()),
                ('thickness', models.FloatField()),
                ('weight', models.FloatField()),
                ('max_read_speed', models.FloatField()),
                ('max_write_speed', models.FloatField()),
                ('random_read_speed', models.FloatField()),
                ('random_write_speed', models.FloatField()),
                ('max_write_endurance', models.FloatField()),
                ('dwpd', models.FloatField()),
                ('mean_time_to_failure', models.FloatField()),
                ('power_consumption', models.FloatField()),
                ('hardware_encryption', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SSDM2',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=255)),
                ('manufacturer_code', models.CharField(max_length=255)),
                ('storage_capacity', models.FloatField()),
                ('form_factor', models.CharField(max_length=255)),
                ('physical_interface', models.CharField(max_length=255)),
                ('bits_per_cell', models.IntegerField()),
                ('memory_structure', models.CharField(max_length=255)),
                ('dram_buffer', models.BooleanField(default=False)),
                ('dram_buffer_capacity', models.FloatField()),
                ('width', models.FloatField()),
                ('length', models.FloatField()),
                ('thickness', models.FloatField()),
                ('weight', models.FloatField()),
                ('max_read_speed', models.FloatField()),
                ('max_write_speed', models.FloatField()),
                ('random_read_speed', models.FloatField()),
                ('random_write_speed', models.FloatField()),
                ('max_write_endurance', models.FloatField()),
                ('dwpd', models.FloatField()),
                ('mean_time_to_failure', models.FloatField()),
                ('power_consumption', models.FloatField()),
                ('hardware_encryption', models.BooleanField(default=False)),
                ('included_heat_sink', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('seller', models.CharField(max_length=255)),
                ('seller_link', models.URLField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
    ]
